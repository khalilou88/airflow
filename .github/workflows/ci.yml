name: Test Airflow Docker Compose

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-airflow-compose:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create required directories
        run: |
          mkdir -p ./dags ./logs ./plugins ./config
          echo "AIRFLOW_UID=$(id -u)" > .env

      - name: Create a simple test DAG
        run: |
          cat > ./dags/test_dag.py << 'EOF'
          from datetime import datetime, timedelta
          from airflow import DAG
          from airflow.operators.bash import BashOperator
          
          default_args = {
              'owner': 'test',
              'depends_on_past': False,
              'start_date': datetime(2024, 1, 1),
              'email_on_failure': False,
              'email_on_retry': False,
              'retries': 1,
              'retry_delay': timedelta(minutes=5),
          }
          
          dag = DAG(
              'test_dag',
              default_args=default_args,
              description='A simple test DAG',
              schedule_interval=timedelta(days=1),
              catchup=False,
              tags=['test'],
          )
          
          test_task = BashOperator(
              task_id='test_task',
              bash_command='echo "Hello from Airflow test!"',
              dag=dag,
          )
          EOF

      - name: Start Airflow services
        run: |
          docker compose up -d
          echo "Waiting for services to be ready..."

      - name: Wait for services to be healthy
        run: |
          # Wait for postgres to be ready
          timeout 300 bash -c 'until docker compose exec -T postgres pg_isready -U airflow; do sleep 5; done'
          
          # Wait for redis to be ready
          timeout 300 bash -c 'until docker compose exec -T redis redis-cli ping | grep PONG; do sleep 5; done'
          
          # Wait for airflow-init to complete
          timeout 600 bash -c 'until [ "$(docker compose ps airflow-init --format "table {{.State}}")" = "exited" ]; do sleep 10; done'
          
          # Check if airflow-init completed successfully
          if [ "$(docker compose ps airflow-init --format "table {{.Status}}")" != "exited (0)" ]; then
            echo "airflow-init failed"
            docker compose logs airflow-init
            exit 1
          fi

      - name: Wait for API server to be ready
        run: |
          timeout 300 bash -c 'until curl -f http://localhost:8080/health; do sleep 10; done'

      - name: Check service health
        run: |
          echo "Checking service status..."
          docker compose ps
          
          # Check if all expected services are running
          services=(
            "airflow-apiserver"
            "airflow-scheduler" 
            "airflow-dag-processor"
            "airflow-worker"
            "airflow-triggerer"
            "postgres"
            "redis"
          )
          
          for service in "${services[@]}"; do
            if ! docker compose ps "$service" | grep -q "Up\|running"; then
              echo "Service $service is not running properly"
              docker compose logs "$service"
              exit 1
            fi
          done

      - name: Test Airflow API
        run: |
          # Test health endpoint
          curl -f http://localhost:8080/health
          
          # Test version endpoint  
          curl -f http://localhost:8080/api/v2/version
          
          # List DAGs (should include our test DAG)
          response=$(curl -s -u airflow:airflow http://localhost:8080/api/v2/dags)
          echo "DAGs response: $response"
          
          # Check if test_dag exists
          if echo "$response" | grep -q "test_dag"; then
            echo "✅ Test DAG found successfully"
          else
            echo "❌ Test DAG not found"
            exit 1
          fi

      - name: Test DAG execution
        run: |
          # Trigger the test DAG
          curl -X POST \
            -u airflow:airflow \
            -H "Content-Type: application/json" \
            -d '{}' \
            http://localhost:8080/api/v2/dags/test_dag/dagRuns
          
          echo "✅ DAG triggered successfully"

      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== Docker Compose Services Status ==="
          docker compose ps
          echo
          echo "=== Airflow API Server Logs ==="
          docker compose logs airflow-apiserver
          echo
          echo "=== Airflow Scheduler Logs ==="
          docker compose logs airflow-scheduler
          echo  
          echo "=== Airflow Worker Logs ==="
          docker compose logs airflow-worker
          echo
          echo "=== Postgres Logs ==="
          docker compose logs postgres
          echo
          echo "=== Redis Logs ==="
          docker compose logs redis

      - name: Cleanup
        if: always()
        run: |
          docker compose down -v
          docker system prune -f